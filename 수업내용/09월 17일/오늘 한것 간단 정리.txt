polling


event_driven




events=get_events()
for i in events:
print(e.type)	# 이벤트의 타입을 return하는 함수


if e.type == SDL_KEYDOWN:	# 키를 눌렀을 경우
	print(e.key)	# 키를 눌렀으면 다른 키들이 출력된다.
	if e.key == SDLK_ESCAPE:
		print("종료키 출력!")




렌더링 -> 로직(이벤트 처리, 연산(계산) 처리)

모듈화(함수, 폴더 별 등등)

while문 안의 상수를 만들어 놓고 프로그램을 끝날 경우 해당 상수의 값을  true에서 false로 바꾸어 프로그램을 끝낸다.

global 자료형이 있어야 지역변수가 전역변수로 바뀐다.

event 타입에 따라서 처리 방식을 달리한다.

and -> &&	같은 의미이다.

SDL_Keycode 사이트(https://wiki.libsdl.org/SDL_Keycode)에서 이벤트들을 확인할 수 있다.














좌표 이동을 위해 출발점과 시작점을 구하고 그 사이의 직선의 방정식을 구하여 그 사이의 값을 구하여 점진적으로 움직인다.

두 점 사이의 값을 구하는 법은 비율에 따라 값을 곱하여 더한것으로 계산한다.

그냥 두점의 사이 값을 이동 비율에 따라 [ 내적 ]한다.

한 객체의 이동방향과 속도는 프레임을 정하고 해당 프레임의 x값과 y값으로 이동방향을, 속도는 이동 방향의 크기로 정한다.

각도로 이동방향을 구하고 싶으면 삼각함수로 해당 방향의 x값과 y값을 구하여 더한다.

삼각함수는 numpy라는 모듈에 함수가 있다. 그냥 써도 되는지는 집에서 확인 요망






























